/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'rahulsomasunderam' at '10/6/13 3:55 PM' with Gradle 1.7
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.7/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
buildscript {
  repositories {
    mavenCentral()
    maven {url "https://repo1.maven.org/maven2"}
  }

  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
  }
}

apply plugin: 'fatjar'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'signing'

groupId = "com.github.rahulsom"
artifactId = "nexus-monitor"
version = "1.1-SNAPSHOT"

mainClassName = "SendEmail"

// In this section you declare where to find the dependencies of your project
repositories {
  // Use 'maven central' for resolving your dependencies.
  // You can declare any Maven/Ivy/file repository here.
  mavenCentral()
  maven {url "https://repo1.maven.org/maven2"}
}

// In this section you declare the dependencies for your production and test code
dependencies {
  // The production code uses the SLF4J logging API at compile time
  compile 'org.slf4j:slf4j-api:1.7.5'
  compile 'org.springframework:spring:2.5.6'
  compile 'javax.mail:mail:1.4.7'
  compile 'org.jsoup:jsoup:1.7.2'
  compile 'commons-codec:commons-codec:1.8'
  compile 'commons-io:commons-io:2.4'
  compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.6'

  compile 'org.codehaus.groovy:groovy-all:2.1.7'

  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.
  testCompile "junit:junit:4.11"
}

fatJar {
  manifest {
    attributes 'Main-Class': 'SendEmail'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives fatJar
  archives sourcesJar
  archives javadocJar
}

repositories {
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots"
  }
}

def env = System.getenv()

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: env['BINTRAY_USER'], password: env['BINTRAY_PASS'])
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
        authentication(userName: env['BINTRAY_USER'], password: env['BINTRAY_PASS'])
      }

      pom.project {
        name 'NexusMonitor'
        packaging 'jar'
        groupId groupId
        artifactId artifactId
        description 'NexusMonitor allows you to send custom email on artifact deploys'
        url 'http://github.com/rahulsom/NexusMonitor'

        scm {
          url 'scm:git@github.com:rahulsom/NexusMonitor.git'
          connection 'scm:git@github.com:rahulsom/NexusMonitor.git'
          developerConnection 'scm:git@github.com:rahulsom/NexusMonitor.git'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'rahulsom'
            name 'Rahul Somasunderam'
          }
        }
      }
    }
  }
}
